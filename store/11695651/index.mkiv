%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%Title:frain 设计文档
%Class:
%Post:1
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\section{介绍}
先说说, 这个项目为什么叫这个名字. 因为我开始这个项目的那一天在下雨, 哈哈. 

这个是一个使用python 实现的vim 的文件浏览器. 其实这样的东西已经有好几个
了, 都表现很好. 但是在我进行一些开发的时候, 发现我的一些要求没有
办法很好的结合, 而且没有api与的其它项目结合. 所以我就依据我自己的要求实现了一个
. 

这次是要进行重构. 实现的目的是为了可以进行远程文件的浏览与编辑. 

同时还有结构上的实现.

\section{一期}
\startitemize
\item  使用openssh 实现文件的访问.
\item 把对于远程访问进行封装, 这样底层可以使用不同的协议
\item  架构上实现前端与后端进行分离. 
\stopitemize


分离的目的有两个, 一是这样做的目的是为了提高代码的质量, 更加结构化. 
二是, 分离之后我发现, 好像不只是这样, 我们还可以把这种列式的前端做很多
别的事情呢. 所以前端的浏览会做为一个库进入vimlib, 而文件的浏览包括远程
都只是做为一个plugin实现. 这个库还会做一些别的事情.


\section{后期}
\startitemize
\item  实现键绑定的分离.
\item 能否实现ssh 使用密码固定的方式
\item 使用长连接的方式, 而不是每一次都发起请求
\stopitemize

\section{概念}
\startitemize
\item  {操作点} 这个对应于list 窗口中一行, 一般对应于一个实际的节点. 
\item {节点} 实际的节点, 如目录, 文件, 一条记录等.
\stopitemize

\section{设计}
节点与操作点是绑定的, 对于其的组织, 之前用的方法简单, 只是一个list. 
重构设计上使用类进行实现.  一个节点可以有多个子节点, 这些子节点在一个
list中. 

节点分成两类node, leaf. 使用N, L 进行标记. 