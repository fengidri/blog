%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%Title:SYN Cookie[引用]
%Class:
%Post:1
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\startitemize
\item  本文主要内容：SYN Cookie的原理，以及它的内核实现。
\item  内核版本：3.6
\item  Author：zhangskd @ csdn blog
\stopitemize

\section{SYN Flood}


SYN Flood是一种非常危险而常见的Dos攻击方式。到目前为止，能够有效防范SYN Flood攻击的手段并不多，
SYN Cookie就是其中最著名的一种。

SYN Flood攻击是一种典型的拒绝服务(Denial of Service)攻击。所谓的拒绝服务攻击就是通过进行攻击，使受害主机或
网络不能提供良好的服务，从而间接达到攻击的目的。
SYN Flood攻击利用的是IPv4中TCP协议的三次握手(Three-Way Handshake)过程进行的攻击。
TCP服务器收到TCP SYN request包时，在发送TCP SYN + ACK包回客户机前，TCP服务器要先分配好一个数据区专门
服务于这个即将形成的TCP连接。一般把收到SYN包而还未收到ACK包时的连接状态称为半打开连接(Half-open Connection)。

在最常见的SYN Flood攻击中，攻击者在短时间内发送大量的TCP SYN包给受害者。受害者(服务器)为每个TCP SYN包分配
一个特定的数据区，只要这些SYN包具有不同的源地址(攻击者很容易伪造)。这将给TCP服务器造成很大的系统负担，最终
导致系统不能正常工作。

\section{SYN Cookie}

SYN Cookie原理由D.J. Bernstain和Eric Schenk提出。
SYN Cookie是对TCP服务器端的三次握手做一些修改，专门用来防范SYN Flood攻击的一种手段。它的原理是，在TCP服务器
接收到TCP SYN包并返回TCP SYN + ACK包时，不分配一个专门的数据区，而是根据这个SYN包计算出一个cookie值。这个
cookie作为将要返回的SYN ACK包的初始序列号。当客户端返回一个ACK包时，根据包头信息计算cookie，与返回的确认序列
号(初始序列号 + 1)进行对比，如果相同，则是一个正常连接，然后，分配资源，建立连接。

实现的关键在于cookie的计算，cookie的计算应该包含本次连接的状态信息，使攻击者不能伪造。
cookie的计算：
服务器收到一个SYN包，计算一个消息摘要mac。
\starttyping
mac = MAC(A, k);
\stoptyping

MAC是密码学中的一个消息认证码函数，也就是满足某种安全性质的带密钥的hash函数，它能够提供cookie计算中需要的安全性。
在Linux实现中，MAC函数为SHA1。
\starttyping
A = SOURCE_IP || SOURCE_PORT || DST_IP || DST_PORT || t || MSSIND
\stoptyping

t为系统启动时间，每60秒加1。
MSSIND为MSS对应的索引。



\section{cookie生成算法}
与syncookies的相关代码在ipv4与ipv6的协议中都有对应的实现. 如/net/ipv4/syncookies.c.

cookie的计算公式为：
\starttyping
#define COOKIEBITS 24	/* Upper bits store count */
#define COOKIEMASK (((__u32)1 << COOKIEBITS) - 1)
cookie = cookie_hash(saddr, daddr, sport, dport, 0, 0) + sseq +
        (count << COOKIEBITS) +
		((cookie_hash(saddr, daddr, sport, dport, count, 1) + data) & COOKIEMASK);
\stoptyping

cookie 的计算中加入了saddr/daddr/sport/dport/sseq 这些来自于头中的信息外还有两个额外的数据.
也正是这些额外的数据可以保证在知道算法的情况也不能轻松地破解.


\startitemize
\item  count:  为服务器发送SYN Cookie的时间，单位为分钟, 保留底24位。
\item  data:  为MSS的索引(0 - 7)，保留在低8位。MSS是一固定的数组.
\stopitemize

验证的目标是收到cookie中的的count与服务器的count 之间小于4并且mssind < 8. 所以要求ack 包在4分钱内到达.
从这里看, 好像并不是那么难以破解的. 但是这里本身就不是用于阻碍用户的请求,
而是实现一种无状态的三次握手.

实际上, 我们避免了SYN Flood攻击的
同时，也提供了另一种拒绝服务攻击方式，攻击者发送大量的ACK报文，服务器忙于计算验证。

由于cookie的计算只涉及到包头部分信息，在建立连接的过程
中不在服务器端保存任何信息，所以失去了协议的许多功能，比如超时重传。

如果t1和mssind都是合法的，则认为此ACK是合法的，可以直接完成三次握手。

\section{扩展}

Linux内核中的SYN Cookie机制主要的功能是防止本机遭受SYN Flood攻击。
SYN Cookie Firewall利用SYN Cookie的原理，在内网和外网之间实现TCP三次握手过程的代理(proxy)。
一些SYN攻击的防火墙也是基于SYN Cookie，只是把这个功能移动到内核之外的代理服务器上。






















